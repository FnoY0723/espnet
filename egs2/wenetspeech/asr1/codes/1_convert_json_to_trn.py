'''
Author: FnoY fangying@westlake.edu.cn
LastEditors: FnoY0723 fangying@westlake.edu.cn
LastEditTime: 2024-09-02 19:57:06
FilePath: /espnet/egs2/realman/codes/1_convert_json_to_trn.py
'''
import os
import json
import sys
import warnings
import subprocess
import argparse

# scenes_path: the direcotry of the test scenes
scenes_path = '/data/home/RealisticAudio/RealMAN_modified/test/dp_speech'
scenes = [name for name in os.listdir(scenes_path) if os.path.isdir(os.path.join(scenes_path, name))]
# print(scenes)
# print(len(scenes))

default_json_file = os.path.join("/data/home/fangying/espnet/egs2/realman/results", 'test_dp_speech.json')
# json_file: the path of the json file generated by ./0_inference.py
parser = argparse.ArgumentParser(description='Output jason file path.')
parser.add_argument('--json_file', type=str, default=default_json_file, help='Output path.')
args = parser.parse_args()

for mode in ['static', 'moving']:
    results_path = f'/data/home/fangying/espnet/egs2/realman/results/{mode}'
    for scene in scenes:
        if not os.path.exists(f'{scenes_path}/{scene}/{mode}'):
            continue
        scene_path = os.path.join(results_path, scene)
        if not os.path.exists(scene_path):
            os.makedirs(scene_path)
        
        trn_file = f'{scene_path}/{args.json_file.split("/")[-1].split(".")[0]}_{scene}.trn'

        # read '*.json' file
        with open(args.json_file, 'r') as file:
            data = json.load(file)

        # write transcripts to '*.trn' file
        with open(trn_file, 'w') as file:
            for item in data:
                if scene in item[0] and mode in item[0] and 'CH0' not in item[0]:
                    # The format of each line is: unsigned Chinese text insert space (spk_id-wav_id)
                    s_spaced = " ".join(item[1])
                    file.write(f"{s_spaced}  (S{item[0].split('/')[-2]}-{item[0].split('_')[-1].split('.')[0]}) \n")
                elif scene in item[0] and mode in item[0] and ('CH0' in item[0]):
                    s_spaced = " ".join(item[1])
                    file.write(f"{s_spaced}  (S{item[0].split('/')[-2]}-{item[0].split('_')[-2]}) \n")

